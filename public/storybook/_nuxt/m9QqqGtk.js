import{aT as p,a6 as u,aU as g}from"./EtfM6F04.js";function l(e){return t=>t?e[t]||t:e.missingValue}function d({formatter:e,keyMap:t,joinWith:r="/",valueMap:n}={}){e||(e=(o,a)=>`${o}=${a}`),t&&typeof t!="function"&&(t=l(t));const i=n||{};return Object.keys(i).forEach(o=>{typeof i[o]!="function"&&(i[o]=l(i[o]))}),(o={})=>Object.entries(o).filter(([s,c])=>typeof c<"u").map(([s,c])=>{const f=i[s];return typeof f=="function"&&(c=f(o[s])),s=typeof t=="function"?t(s):s,e(s,c)}).join(r)}function j(e=""){if(typeof e=="number")return e;if(typeof e=="string"&&e.replace("px","").match(/^\d+$/g))return Number.parseInt(e,10)}function w(e=""){if(e===void 0||!e.length)return[];const t=new Set;for(const r of e.split(" ")){const n=Number.parseInt(r.replace("x",""));n&&t.add(n)}return Array.from(t)}function _(e){if(e.length===0)throw new Error("`densities` must not be empty, configure to `1` to render regular size only (DPR 1.0)")}function O(e){const t={};if(typeof e=="string")for(const r of e.split(/[\s,]+/).filter(n=>n)){const n=r.split(":");n.length!==2?t["1px"]=n[0].trim():t[n[0].trim()]=n[1].trim()}else Object.assign(t,e);return t}const h=d({keyMap:{format:"f",fit:"fit",width:"w",height:"h",resize:"s",quality:"q",background:"b"},joinWith:"&",formatter:(e,t)=>p(e)+"_"+p(t)}),m=(e,{modifiers:t={},baseURL:r}={},n)=>{t.width&&t.height&&(t.resize=`${t.width}x${t.height}`,delete t.width,delete t.height);const i=h(t)||"_";return r||(r=u(n.options.nuxt.baseURL,"/_ipx")),{url:u(r,i,g(e))}},b=!0,x=!0,y=Object.freeze(Object.defineProperty({__proto__:null,getImage:m,operationsGenerator:h,supportsAlias:x,validateDomains:b},Symbol.toStringTag,{value:"Module"}));export{O as a,w as b,_ as c,y as i,j as p};
